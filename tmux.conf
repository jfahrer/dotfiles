unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys C-l
bind C-k send-keys C-k

set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

#set inactive/active window styles
set -g window-style 'fg=default,bg=colour238'
set -g window-active-style 'fg=default,bg=colour8'

# set -g window-style 'fg=default,bg=colour7'
# set -g window-active-style 'fg=default,bg=colour15'

# set the pane border colors
set -g pane-border-fg colour66
set -g pane-border-bg colour238
set -g pane-active-border-fg colour238
set -g pane-active-border-bg colour66

# set -g pane-border-fg colour15
# set -g pane-border-bg colour244
# set -g pane-active-border-fg colour244
# set -g pane-active-border-bg colour15

set-option -g status-left-length 50
set-option -g status-right ""

bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

# bind-key C-j choose-tree
bind-key C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X begin-selection\; send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Also use ] to switch into copy mode (we don't need it to paste stuff)
bind-key ] copy-mode

# Useful shortcuts
bind-key h split-window -h "htop"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Close panes / windows
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Breakout pane into new session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Scratch pad
bind C-p if-shell "$is_vim" "send-keys Escape; send-keys ':vsp .scratch'; send-keys Enter" "split-window -h 'vim .scratch'"

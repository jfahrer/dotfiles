export DOCKER_HIDE_LEGACY_COMMANDS=true

# Docker / Compose
alias d=docker
alias ds="docker stats"
alias dm=docker-machine
alias dc=docker-compose
alias de="docker-compose exec app"
alias dr="docker-compose run --rm app"
alias dl="docker-compose logs --tail 50 -f"
alias dla="docker-compose logs"
alias dcr="docker-compose run --rm"
alias dce="docker-compose exec"
alias dmo=__docker_machine_open
alias dme=__docker_machine_eval

complete -F _docker d
complete -F _docker_compose dc
complete -F _docker_machine dm


# Ruby helpers
alias rails="__run_with_compose rails"
alias bundle="__run_with_compose bundle"
alias rake="__run_with_compose rake"
alias rspec="__run_with_compose rspec"
alias irb="__run_with_compose irb"
alias yarn="__run_with_compose yarn"
alias rubocop="__run_with_compose rubocop"

# Kubernetes
alias ak="aws-vault exec app -- kubectl"
alias k="kubectl"

complete -F __start_kubectl ak
complete -F __start_kubectl k


# Helper functions
__docker_machine_name() {
  if [ -e .docker-machine ]
  then
    cat .docker-machine
  else
    echo "default"
  fi
}

__docker_machine_eval() {
  MACHINE=${1:-$(__docker_machine_name)}
  (docker-machine ls | grep $MACHINE > /dev/null)
  if [ $? -eq 0 ]
  then
    eval $(docker-machine env $1)
  else
    echo "Could not finde docker machine $MACHINE" >&2
  fi
}

__docker_machine_open() {
  PORT=${1:-80}
  MACHINE=$(docker-machine active)
  IP=$(docker-machine ip $MACHINE)
  echo "Opening browser for $MACHINE with IP $IP on port $PORT..."
  open "http://$IP:$PORT"
  echo ...done
}

__run_with_compose() {
  COMMAND=$1
  shift
  if [ -e .run_with_compose ]
  then
    de $COMMAND "$@"
  else
    $(which $COMMAND) "$@"
  fi
}
